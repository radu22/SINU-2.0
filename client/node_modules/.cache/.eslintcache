[{"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Context\\AuthProvider.js":"4","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\BackgroundImagePage.jsx":"5","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Login.jsx":"6","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Dashboard.jsx":"7","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Register.jsx":"8","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\api\\axios.js":"9","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Sidebar.jsx":"10","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\DataSidebard.jsx":"11"},{"size":681,"mtime":1651594800595,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1649359974874,"results":"14","hashOfConfig":"13"},{"size":938,"mtime":1651605494096,"results":"15","hashOfConfig":"13"},{"size":352,"mtime":1649597250680,"results":"16","hashOfConfig":"13"},{"size":242,"mtime":1649754303525,"results":"17","hashOfConfig":"13"},{"size":4637,"mtime":1650719629935,"results":"18","hashOfConfig":"13"},{"size":2122,"mtime":1651581065735,"results":"19","hashOfConfig":"13"},{"size":7440,"mtime":1651581121434,"results":"20","hashOfConfig":"13"},{"size":101,"mtime":1649597250681,"results":"21","hashOfConfig":"13"},{"size":1542,"mtime":1651604944803,"results":"22","hashOfConfig":"13"},{"size":1477,"mtime":1651605443966,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"2sl2kp",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\index.js",[],[],["61","62"],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\App.js",["63","64"],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Context\\AuthProvider.js",[],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\BackgroundImagePage.jsx",[],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Login.jsx",["65"],[],"import {useState, useEffect, useContext,} from \"react\";\r\nimport AuthContext from \"../Context/AuthProvider\";\r\nimport axios from \"../api/axios\";\r\nimport {Alert, Form, Row} from 'react-bootstrap';\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst LOGIN_URL = '/auth';\r\n\r\nconst Login = () => {\r\n    const {setAuth} = useContext(AuthContext);\r\n    const [username, setUsername] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    /* Sterge erroarea in momentul in care user/pwd sunt modificate */\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [username, pwd]);\r\n\r\n\r\n    /* Apeleaza API-ul cu datele din form */\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({username, pwd}),\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    withCredentials: false\r\n                }\r\n            );\r\n\r\n            console.log(JSON.stringify(response));\r\n            const accessToken = response?.data?.accessToken;\r\n            const role = response?.data?.role;\r\n            setAuth({username, pwd, role, accessToken})\r\n\r\n            setUsername('');\r\n            setPwd('');\r\n            setSuccess(true);\r\n\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                console.log(err.response)\r\n                setErrMsg(err.response.data?.message || 'Login failed')\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg(err.response.data?.message || 'Login failed')\r\n            } else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n        }\r\n    }\r\n    const renderErrorMessage = () => {\r\n        return (\r\n            <Alert variant=\"danger\">\r\n                <p>{errMsg}</p>\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    const renderLoginForm = () => {\r\n        return (\r\n            <Form onSubmit={handleSubmit} validated={validated}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                    <Form.Label className=\"labelLogin\">Username</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        value={username}/>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label className=\"labelLogin\">Password</Form.Label>\r\n\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        aria-autocomplete={'none'}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setPwd(e.target.value)}\r\n                        value={pwd}/>\r\n                </Form.Group>\r\n\r\n                <div className=\"textLink\">\r\n                    <Link to=\"#\" className=\"link\"> Forgot Password ?</Link>\r\n                </div>\r\n                <div className=\"btnLogInPosition\">\r\n                    <button className=\"buttonLogin\">Log In</button>\r\n                </div>\r\n                <div className=\"textLink\" style={{textAlign: \"center\"}}>\r\n                    Need an account? <Link to=\"/register\" className=\"link\"> Sign in</Link>\r\n                </div>\r\n                <div>\r\n                    {errMsg ? renderErrorMessage() : ''}\r\n                </div>\r\n\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    return (\r\n        (success ? <Navigate to=\"/dashboard\" />\r\n                :\r\n                <>\r\n                    <div className=\"position-absolute rectangleLogin p-4\">\r\n                        <Row><img className=\"logoLoginRectangle\" src={require('../Styles/Logo_90.png')}/></Row>\r\n                        <Row>\r\n                            {renderLoginForm()}\r\n                        </Row>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                </>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Dashboard.jsx",["66","67","68","69","70","71","72","73","74","75","76","77"],[],"import {useState, useEffect, useContext,} from \"react\";\r\nimport AuthContext from \"../Context/AuthProvider\";\r\nimport axios from \"../api/axios\";\r\nimport {Alert, Form, Row, Navbar, Container, NavbarBrand, Nav, Fade, NavLink} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst DASHBOARD_URL = '/dashboard';\r\n\r\nconst Dashboard = () => {\r\n    const [linkClassDate, setLinkClassDate] = useState(\"datePersonale\");\r\n    const [linkClassSituatie, setLinkClassSituatie] = useState(\"situatieScolara\");\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    return (\r\n        <Nav className=\"navBar\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/dashboard\" >\r\n                    <img className=\"UTCN\" src={require('../Styles/utcluj_logo.png')}/>\r\n                </Navbar.Brand>\r\n                <hr/>\r\n                <Nav.Item>\r\n                    <div className={clicked ? \"datePersonaleClick linkDash\" : linkClassDate}\r\n                              onMouseEnter={() => setLinkClassDate(\"datePersonaleClick linkDash\")}\r\n                              onMouseLeave={() => setLinkClassDate(\"datePersonale linkDash\")}\r\n                              onClick={() => setClicked(true)}\r\n                    >\r\n                        <Link to=\"#\"  className=\"linkDash\">\r\n                            Date Personale\r\n                        </Link>\r\n                        </div>\r\n                </Nav.Item>\r\n\r\n                <Nav.Item>\r\n                    <div className={clicked ? \"situatieScolara linkDash\" : linkClassSituatie}\r\n                         onMouseEnter={() => setLinkClassSituatie(\"situatieScolaraClick linkDash\")}\r\n                         onMouseLeave={() => setLinkClassSituatie(\"situatieScolara linkDash\")}\r\n                         onClick={() => setClicked(true)}\r\n                    >\r\n                        <Link to=\"#\"  className=\"linkDash\">\r\n                            Situatie Scolara\r\n                        </Link>\r\n                    </div>\r\n                </Nav.Item>\r\n\r\n            </Container>\r\n        </Nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Register.jsx",["78","79","80","81"],[],"import {useState, useEffect} from \"react\";\r\nimport axios from \"../api/axios\";\r\nimport {Form, Row} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst REGISTER_URL = '/register';\r\nconst VERIFY_CNP_URL= '/verifyCnp';\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [pwdConfirm, setPwdConfirm] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [cnp, setCnp] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [isCnpValid, setIsCnpValid] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n\r\n    /* Sterge erroarea in momentul in care user/pwd sunt modificate */\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [username, pwd, email, pwdConfirm, cnp]);\r\n\r\n    const handleCnpSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(VERIFY_CNP_URL,\r\n                JSON.stringify({cnp}),\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    withCredentials: false\r\n                }\r\n\r\n            );\r\n            setIsCnpValid(true)\r\n\r\n\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Cnp is required')\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unathorized');\r\n            } else {\r\n                setErrMsg('Register Failed');\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /* Apeleaza API-ul cu datele din form */\r\n    const handleRegisterSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n\r\n        console.log(cnp, username, pwd, email, pwdConfirm);\r\n\r\n        if (pwd !== pwdConfirm) {\r\n            setErrMsg('Passwords did not match!');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({cnp, username, pwd, email}),\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    withCredentials: false\r\n                }\r\n            );\r\n\r\n            setUsername('');\r\n            setPwd('');\r\n            setEmail('');\r\n            setCnp('');\r\n            setPwdConfirm('');\r\n            setSuccess(true);\r\n\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password')\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            } else {\r\n                setErrMsg('Register Failed');\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderCnpForm = () => {\r\n        return (\r\n            <Form onSubmit={handleCnpSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCNP\">\r\n                    <Form.Label className=\"labelLogin\">Cod numeric personal</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        class=\"form-control form-control-sm\"\r\n                        type=\"number\"\r\n                        maxlength=\"13\"\r\n                        placeholder=\"Introduceti CNP-ul\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setCnp(e.target.value)}\r\n                        value={cnp}/>\r\n                </Form.Group>\r\n                <div className=\"btnLogInPosition\">\r\n                    <button className=\"buttonLogin\">Verifica</button>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n    const renderRegisterForm = () => {\r\n        return (\r\n            <Form onSubmit={handleRegisterSubmit} validated={validated}>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label className=\"labelLogin\">Email</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        class=\"form-control form-control-sm\"\r\n                        type=\"email\"\r\n                        placeholder=\"name@example.com\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        value={email}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                    <Form.Label className=\"labelLogin\">Username</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        class=\"form-control form-control-sm\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        value={username}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label className=\"labelLogin\">Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        class=\"form-control form-control-sm\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        aria-autocomplete={'none'}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setPwd(e.target.value)}\r\n                        value={pwd}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label className=\"labelLogin\">Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        class=\"form-control form-control-sm\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        aria-autocomplete={'none'}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setPwdConfirm(e.target.value)}\r\n                        value={pwdConfirm}/>\r\n                </Form.Group>\r\n\r\n                <div className=\"btnLogInPosition\">\r\n                    <button className=\"buttonLogin\">Sign Up</button>\r\n                </div>\r\n                <div className=\"textLink\" style={{textAlign: \"center\"}}>\r\n                    Already have an account? <Link to=\"/login\" className=\"link\"> Log in</Link>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n    return (\r\n        (success ? <>\r\n                    <h1>LOGIN </h1>\r\n                </>\r\n                :\r\n                <>\r\n                    <div className=\"rectangleLogin p-4\">\r\n                        <Row><img className=\"logoLoginRectangle\" src={require('../Styles/Logo_90.png')}/></Row>\r\n                        <Row>\r\n                            {isCnpValid ? renderRegisterForm() : renderCnpForm()}\r\n                        </Row>\r\n                    </div>\r\n                </>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\api\\axios.js",[],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\Sidebar.jsx",["82","83","84","85","86","87","88","89","90","91","92"],[],"C:\\Users\\User\\Desktop\\Proiect II\\SINU-2.0\\client\\src\\Components\\DataSidebard.jsx",[],[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":22,"nodeType":"99","messageId":"100","endLine":9,"endColumn":28},{"ruleId":"97","severity":1,"message":"101","line":12,"column":5,"nodeType":"99","messageId":"100","endLine":12,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":122,"column":30,"nodeType":"104","endLine":122,"endColumn":106},{"ruleId":"97","severity":1,"message":"105","line":1,"column":19,"nodeType":"99","messageId":"100","endLine":1,"endColumn":28},{"ruleId":"97","severity":1,"message":"106","line":1,"column":30,"nodeType":"99","messageId":"100","endLine":1,"endColumn":40},{"ruleId":"97","severity":1,"message":"107","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"108","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"109","line":4,"column":9,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"110","line":4,"column":16,"nodeType":"99","messageId":"100","endLine":4,"endColumn":20},{"ruleId":"97","severity":1,"message":"111","line":4,"column":22,"nodeType":"99","messageId":"100","endLine":4,"endColumn":25},{"ruleId":"97","severity":1,"message":"112","line":4,"column":46,"nodeType":"99","messageId":"100","endLine":4,"endColumn":57},{"ruleId":"97","severity":1,"message":"113","line":4,"column":64,"nodeType":"99","messageId":"100","endLine":4,"endColumn":68},{"ruleId":"97","severity":1,"message":"114","line":4,"column":70,"nodeType":"99","messageId":"100","endLine":4,"endColumn":77},{"ruleId":"97","severity":1,"message":"115","line":7,"column":7,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":18,"column":21,"nodeType":"104","endLine":18,"endColumn":87},{"ruleId":"97","severity":1,"message":"116","line":16,"column":12,"nodeType":"99","messageId":"100","endLine":16,"endColumn":18},{"ruleId":"97","severity":1,"message":"117","line":31,"column":19,"nodeType":"99","messageId":"100","endLine":31,"endColumn":27},{"ruleId":"97","severity":1,"message":"117","line":73,"column":19,"nodeType":"99","messageId":"100","endLine":73,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":192,"column":30,"nodeType":"104","endLine":192,"endColumn":106},{"ruleId":"97","severity":1,"message":"101","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"109","line":4,"column":9,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"110","line":4,"column":16,"nodeType":"99","messageId":"100","endLine":4,"endColumn":20},{"ruleId":"97","severity":1,"message":"111","line":4,"column":22,"nodeType":"99","messageId":"100","endLine":4,"endColumn":25},{"ruleId":"97","severity":1,"message":"118","line":4,"column":35,"nodeType":"99","messageId":"100","endLine":4,"endColumn":44},{"ruleId":"97","severity":1,"message":"112","line":4,"column":46,"nodeType":"99","messageId":"100","endLine":4,"endColumn":57},{"ruleId":"97","severity":1,"message":"119","line":4,"column":59,"nodeType":"99","messageId":"100","endLine":4,"endColumn":62},{"ruleId":"97","severity":1,"message":"113","line":4,"column":64,"nodeType":"99","messageId":"100","endLine":4,"endColumn":68},{"ruleId":"97","severity":1,"message":"114","line":4,"column":70,"nodeType":"99","messageId":"100","endLine":4,"endColumn":77},{"ruleId":"102","severity":1,"message":"103","line":11,"column":26,"nodeType":"104","endLine":11,"endColumn":92},{"ruleId":"120","severity":1,"message":"121","line":19,"column":58,"nodeType":"122","messageId":"123","endLine":19,"endColumn":60},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'axios' is defined but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'NavbarBrand' is defined but never used.","'Fade' is defined but never used.","'NavLink' is defined but never used.","'DASHBOARD_URL' is assigned a value but never used.","'errMsg' is assigned a value but never used.","'response' is assigned a value but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]